{"filter":false,"title":"christmasTree.js","tooltip":"/christmasTree.js","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":81,"column":18},"action":"insert","lines":["const christmasTree = () => {","  ","    // Edit \"blocksInTree\" to change how many blocks are in the christmas tree","    ","    // vvvvvvvv","    ","    const blocksInTree = 6;","    ","    // ^^^^^^^^","    ","    // Parts of Tree","    const heightOfTree = (blocksInTree * 3) + 1;","    const spacesInsideOfTree = [];","    const spacesForBaseOfTree = [];","    const treeBuildingBlocks = [];","    const bottomOfTree = [];","    ","    // Calculation for width of base of tree","    let baseCalculation;","    switch(blocksInTree) {","      case 1:","        baseCalculation = 2.4;","        break;","      case 2:","        baseCalculation = 3.8;","        break;","      default:","        baseCalculation = 4.1;","    }","    const widthOfBaseOfTree = blocksInTree / ((heightOfTree - 3) / baseCalculation);","    ","    /* ","    For loop to create the building blocks for the tree with spacing inside of the tree ","    */","    for (let i = 0; i < heightOfTree; i++) {","      spacesInsideOfTree.push(\"  \");","      spacesToString = spacesInsideOfTree.join(\"\");","      if(i === 0) {","        treeBuildingBlocks.push(\"  |   \");","      } else if (i % 3 === 0 && (i + 1) !== heightOfTree) {","        spacesInsideOfTree.pop(\"   \");","        spacesToString = spacesInsideOfTree.join(\"\");","        treeBuildingBlocks.push(`/_${spacesToString}_\\\\`);","      } else {","        treeBuildingBlocks.push(`/${spacesToString}\\\\`);","      }","    }","    ","    /* ","    For loop to add each line in the \"treeBuildingBlocks\" array to the console with","    spacing outside of the tree","    */","    const numberOfSpacesOutsideTree = treeBuildingBlocks.length;","    treeBuildingBlocks.map((treeBuild, index) => {","      let spaces = [];","      for (let i = 0; i < numberOfSpacesOutsideTree - index; i++) {","        if ((i) % 3 === 0 && i !== 0) {","          continue;","        } else {","          spaces.push(\" \");","        }","      }","      let spacesToString = spaces.join(\"\");","      console.log(spacesToString + treeBuild + spacesToString);","    })","    ","    /* For loop for creating the bottom of the tree */","    for (let i = 0; i < (heightOfTree * widthOfBaseOfTree); i++) {","      bottomOfTree.push(\"_\");","    }","    const bottomOfTreeToString = bottomOfTree.join(\"\")","    console.log(`|${bottomOfTreeToString}|`);","  ","     /* For loop for creating the base of the tree */","    for (let i = 0; i < (blocksInTree); i++) {","      spacesForBaseOfTree.push(\"  \");","    }","    const spacesForBaseOfTreeString = spacesForBaseOfTree.join(\"\");","    console.log(`${spacesForBaseOfTreeString}\\\\______/${spacesForBaseOfTreeString}`);","  }","                ","  christmasTree();"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":81,"column":18},"action":"remove","lines":["const christmasTree = () => {","  ","    // Edit \"blocksInTree\" to change how many blocks are in the christmas tree","    ","    // vvvvvvvv","    ","    const blocksInTree = 6;","    ","    // ^^^^^^^^","    ","    // Parts of Tree","    const heightOfTree = (blocksInTree * 3) + 1;","    const spacesInsideOfTree = [];","    const spacesForBaseOfTree = [];","    const treeBuildingBlocks = [];","    const bottomOfTree = [];","    ","    // Calculation for width of base of tree","    let baseCalculation;","    switch(blocksInTree) {","      case 1:","        baseCalculation = 2.4;","        break;","      case 2:","        baseCalculation = 3.8;","        break;","      default:","        baseCalculation = 4.1;","    }","    const widthOfBaseOfTree = blocksInTree / ((heightOfTree - 3) / baseCalculation);","    ","    /* ","    For loop to create the building blocks for the tree with spacing inside of the tree ","    */","    for (let i = 0; i < heightOfTree; i++) {","      spacesInsideOfTree.push(\"  \");","      spacesToString = spacesInsideOfTree.join(\"\");","      if(i === 0) {","        treeBuildingBlocks.push(\"  |   \");","      } else if (i % 3 === 0 && (i + 1) !== heightOfTree) {","        spacesInsideOfTree.pop(\"   \");","        spacesToString = spacesInsideOfTree.join(\"\");","        treeBuildingBlocks.push(`/_${spacesToString}_\\\\`);","      } else {","        treeBuildingBlocks.push(`/${spacesToString}\\\\`);","      }","    }","    ","    /* ","    For loop to add each line in the \"treeBuildingBlocks\" array to the console with","    spacing outside of the tree","    */","    const numberOfSpacesOutsideTree = treeBuildingBlocks.length;","    treeBuildingBlocks.map((treeBuild, index) => {","      let spaces = [];","      for (let i = 0; i < numberOfSpacesOutsideTree - index; i++) {","        if ((i) % 3 === 0 && i !== 0) {","          continue;","        } else {","          spaces.push(\" \");","        }","      }","      let spacesToString = spaces.join(\"\");","      console.log(spacesToString + treeBuild + spacesToString);","    })","    ","    /* For loop for creating the bottom of the tree */","    for (let i = 0; i < (heightOfTree * widthOfBaseOfTree); i++) {","      bottomOfTree.push(\"_\");","    }","    const bottomOfTreeToString = bottomOfTree.join(\"\")","    console.log(`|${bottomOfTreeToString}|`);","  ","     /* For loop for creating the base of the tree */","    for (let i = 0; i < (blocksInTree); i++) {","      spacesForBaseOfTree.push(\"  \");","    }","    const spacesForBaseOfTreeString = spacesForBaseOfTree.join(\"\");","    console.log(`${spacesForBaseOfTreeString}\\\\______/${spacesForBaseOfTreeString}`);","  }","                ","  christmasTree();"],"id":21},{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":[" ","const christmasTree = () => {","  ","    // Edit \"blocksInTree\" to change how many blocks are in the christmas tree","    ","    // vvvvvvvv","    ","    const blocksInTree = 6;","    ","    // ^^^^^^^^","    ","    // Parts of Tree","    const heightOfTree = (blocksInTree * 3) + 1;","    const spacesInsideOfTree = [];","    const spacesForBaseOfTree = [];","    const treeBuildingBlocks = [];","    const bottomOfTree = [];","    ","    // Calculation for width of base of tree","    let baseCalculation;","    switch(blocksInTree) {","      case 1:","        baseCalculation = 2.4;","        break;","      case 2:","        baseCalculation = 3.8;","        break;","      default:","        baseCalculation = 4.1;","    }","    const widthOfBaseOfTree = blocksInTree / ((heightOfTree - 3) / baseCalculation);","    ","    /* ","    For loop to create the building blocks for the tree with spacing inside of the tree ","    */","    for (let i = 0; i < heightOfTree; i++) {","      spacesInsideOfTree.push(\"\\xa0\\xa0\");","      spacesToString = spacesInsideOfTree.join(\"\");","      if(i === 0) {","        treeBuildingBlocks.push(\"\\xa0\\xa0|\\xa0\\xa0\\xa0\");","      } else if (i % 3 === 0 && (i + 1) !== heightOfTree) {","        spacesInsideOfTree.pop(\"\\xa0\\xa0\\xa0\");","        spacesToString = spacesInsideOfTree.join(\"\");","        treeBuildingBlocks.push(`/_${spacesToString}_\\\\`);","      } else {","        treeBuildingBlocks.push(`/${spacesToString}\\\\`);","      }","    }","    ","    /* ","    For loop to add each line in the \"treeBuildingBlocks\" array to the console with","    spacing outside of the tree","    */","    const numberOfSpacesOutsideTree = treeBuildingBlocks.length;","    treeBuildingBlocks.map((treeBuild, index) => {","      let spaces = [];","      for (let i = 0; i < numberOfSpacesOutsideTree - index; i++) {","        if (i % 3 === 0 && i !== 0) {","          continue;","        } else {","          spaces.push(\"\\xa0\");","        }","      }","      let spacesToString = spaces.join(\"\");","      console.log(spacesToString + treeBuild + spacesToString);","    });","    ","    /* For loop for creating the bottom of the tree */","    for (let i = 0; i < (heightOfTree * widthOfBaseOfTree); i++) {","      bottomOfTree.push(\"_\");","    }","    const bottomOfTreeToString = bottomOfTree.join(\"\");","    console.log(`|${bottomOfTreeToString}|`);","  ","     /* For loop for creating the base of the tree */","    for (let i = 0; i < blocksInTree; i++) {","      spacesForBaseOfTree.push(\"\\xa0\\xa0\");","    }","    const spacesForBaseOfTreeString = spacesForBaseOfTree.join(\"\");","    console.log(`${spacesForBaseOfTreeString}\\\\______/${spacesForBaseOfTreeString}`);","  }","                ","  christmasTree();",""]}],[{"start":{"row":82,"column":18},"end":{"row":83,"column":0},"action":"remove","lines":["",""],"id":22}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":15},"end":{"row":9,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1578034524424,"hash":"a90822d2f69f295951910feaec27f03ece0cef4b"}